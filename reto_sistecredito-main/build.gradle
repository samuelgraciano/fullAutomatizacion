defaultTasks 'clean','test','aggregate'

repositories {
    mavenLocal()
    jcenter()
}

buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.1.2")
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.7"
    }
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'net.serenity-bdd.aggregator'
apply plugin: "jacoco"
apply plugin: 'org.sonarqube'

sonarqube {
    properties{
        property "sonar.projectName", "RetoTecnicoSisteCredito"
        property "sonar.projectKey", "RetoTecnicoSisteCredito"
        property "sonar.projectVersion", "1.0"
        property "sonar.jacoco.reportPath", "${project.buildDir}/jacoco/test.exec"
        property "sonar.host.url","http://localhost:9000"
    }

}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}



dependencies {

    implementation 'net.serenity-bdd:serenity-core:2.1.2'
    implementation 'net.serenity-bdd:serenity-junit:2.1.2'
    implementation 'net.serenity-bdd:serenity-screenplay:2.1.2'
    implementation 'net.serenity-bdd:serenity-screenplay-rest:2.1.2'
    implementation 'net.serenity-bdd:serenity-ensure:2.1.2'
    implementation 'net.serenity-bdd:serenity-screenplay-webdriver:2.1.2'
    implementation 'net.serenity-bdd:serenity-cucumber:1.9.51'
    implementation 'log4j:log4j:1.2.17'
    implementation 'org.json:json:20180813'
    implementation 'com.github.javafaker:javafaker:1.0.2'
}
compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
gradle.startParameter.continueOnFailure = true

test.finalizedBy(aggregate)

